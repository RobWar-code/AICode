Work Log
Contents
    Jobs Due
    Jobs Done

Jobs Due

    Possibly include duplication in monoclonal breed mutations

    Update the README with the current system definition

    Check through code sequences to establish stepwise rules

    Pass ExecutionCycle to the rulesets getScore method to trigger some rules

    * Fix the save/load seed rules
    
    * Tidy-up rule descriptions

    Allow for the selection of a rule to run in isolation.

    Allow for input parameters associated with a rule (to be passed to the entities)

    Change Divide Inputs

    Fix the paramsGreaterThanN issue

    * Add the rules:
        * paramsPlusN (n = 3, n = 6)
        * paramsPlusN (n = 3, n = 6)
        * paramsTimesN (n = 2, n = 6)

    * Add the instructions
        * JRNZ
        * JRNC

    Include save scorelist for an entity?

    Trace operation
        Close the trace window from the main window

        Include a close option on the trace window

    Apply redundant pairs to monoclonal instruction insert/replace?

    Do estimating for probabilities with samples etc.
        Allow for multiple ways to solve the same issue

    Consider why the system gets trapped in solutions so soon.

    Overcome "cheating" in which the entity simply places the test/result byte into the output block
        This might be overcome by making the tests sufficiently numerically steep?
        Threshold minimum of steps?
        Include the input argument(s) adjacent to the output result in the output data.
        See weeding below

    Weeding - removing sub-standard items from the best set

    Continue the analysis

Jobs Done
    08/02/2025

    * Add interbreedInsMerge breed method

    * Add duplicate input params rule

    * Add add first param to params rule
    
    * Add add second param rule

    * Add duplicate instruction/byte to monoclonal breeding

    * Add transpose instruction/byte to monoclonal breeding

    * Clear seed selector when processing resumed

    * Halt the process when seed rule option selected

    * Fix Display of Rule Description in seed program display

    * Fix seed program selector

    * Add skip adjacent param 1 rule (first byte)

    * Add the skip adjacent params rule

    * Add the swap adjacent params rule

    * Add the add adjacent params rule

    * Add the subtract the adjacent params rule

    * Set the rule output positions to the same for each rule

    * Allow for load and inspect completed solutions (seed rules)

    * Save the completed solutions.

    * When using seed rules, select at random from the set of completed
    solutions

    31/01/25
    
    * Do one rule at a time, replacing the rule by the next,
    * using the previous result as the seed for the next.
        * Modify the ruleset getScore to use only retained and the current rule

        * Save the initialMemSpace and ruleNum of the threshold entity in rulesets
        
        * Set flag to indicate that the threshold has been reached

        * In the main loop check for threshold reached, 
        when the threshold is reached, clear down all best sets.

        * In the main loop save operation, include the ruleset ruleSequenceNum, and seedRuleMemSpace

        * When calling the new entity in the process loop, use the flag to 
        indicate using the threshold entity memSpace.

        * In the general load operation, include the ruleSequenceNum and seedRuleMemSpace

        * Include seedRuleBreedCount on display

        * Include ruleSequenceNum on display

        * Update byte rule score, allowing for thresholds and retained rules

    * Rationalise the byte scores for hits and near hits
        chose 0 for hit, 255 for miss since relative
        scoring leads to a cheat.

    * Remove insert lower score into tables

    23/01/2025
    
    * Add the rule to convert ASCII numbers
       * Write test scripts fro the functions

    * Fix the elapsed time indicator - problem when entity selected.

    * Change the page font size to 13px.

    * On the clearance pass eliminate cases of more than three items whose
    output values are the same.

    * Only count in interbreedFlagged instructions if they are not no-ops.
        This overcomes the problem of executing all instructions with
        the cheat of using no-ops.

    * Transmit key globals to the renderer at start-up

    * On the step execute operation for trace allow for the score/end of program

    * On the trace window allow for auto step on/off and a speed control

    * Add a trace restart button

    * Add score for loop back code that is actually used.

    * Remove the existing testScript functions and hooks from entity.js
    * Remove the existing testScript function hooks from instructionSet

    19/01/2025
    
    * Remove duplicate best sets when scores match at clearnance cycle.

    * Introduce a score for the number of reverse jump JR instructions

    * Adjust scoring (x/(max - opt) and x/(opt - min))

    Introduce a score for the number of different instructions actually executed

    * Round off the scores in the score list

    * Use an exponential scoring system to encourage specialisation
        This worsens results so withdraw

    * Modify the rulesets to pass the rule list object to the functions
    in a loop

    * Bear in mind the current setting for numRounds im mainControl

    * Add InterbreedFlagged - for flagged code segment interchange

    * Add the = a b rule in the rule set

    * Flatten the scoring 

    * Prove the insert seed operation

    13/01/2025

    * Introduce byte level mutatiaons for monoclonal breeding

    * Update Windows System
        * Recreate tables on windows system

    * Introduce rules one at a time from number of rounds
        Problem with same score each round? breed? entity repeated?

    * On main display show number of rounds

    * Load with execute to adjust scores to the prevailing environment
    
    * Indicate actual number of cross-set breeds

    * Adjust height of code display on main window - make scrollable

    * Reduce the line spacing of titles on the main display

    * Reset the trace button when the trace window is closed

    * Score the difference between the outputs from the execution runs

    * Regionalise interset breeding
    
    * Work-on and modify the rulesets
        * Use consistent i/o data blocks

    * Update the instruction set in the README
    
    * Figure out the necessary procedures for git pull on the windows system
       * Re-copy the src directory.

    09/01/2025

    * Adjust rule set
        * Add param minus three

    * Test Program / Seeding
        * Do the analysis for test scripting and seeding in the README.
        * Make the necessary modifications to index.html
        * Write the seedPrograms.js object
        * Do score list
        * Do Trace interface connection
        * On restart processing, rebuild the best set entity display
        * Do the insert seed into best set operation

    * Use git to update the windows system (rulesets.js)

    * Do the git update for the new rule and send to the other computer

    * Include a rule to score matching CASM instructions

    * Port to the windows laptop

    * Include auto-save and database tidy

    * Include a self-breed method that uses a copy of the final memspace

    * Save/Load Procedures
        Hook Electron upto MySql

    29/12/2024
    
    * Every 1000 cycles restart the lowest half of the bestSets

    * Checkout the interbreed operation
    
    * Add a R S registers to get the result of scores of output bytes
        * Do analysis of this in README
        * Do the ruleset functions etc.
        * Add the LD A, R and LD A, S instructions to the instruction set
        * Do the ruleset tests

    * Add rules using the op a b approach for +-*
        * Update the initial parameters
        * Write the op code rules
        * Write the byte test rules
        * Write the test scripts

    26/12/2024
    * Add additional instructions to load and save the B, C registers

    * Increase the number of best set to 24 
    
    * Decrease the number of entities per best set to 40

    * Write-up the procedures and layout for the trace program option

    * Problem with valuesOut
        * Add a LD A, IMM instruction
        * Write code insert operation to test the instructions

    * On-display step through code

    * Code the trace operation

        * Do the transmission to the trace object

        * Do the main trace object

        * Do the trace step event

        * Include borders around data

        * Consider smaller instruction list divs

        * Register display on one line


    * Adjust the stack pointer to the end of the memory area

    * Include score history

    * Show the first pass params block as well as the second
        * Arrange the params and outputs one above the other
        
    * List the input parameters in blocks of eight as for the outputs

    * Check that ADD A, B overflows

    * Allow for register memory addressing

    13/12/2024
    * Entity Display Selector not working

    * Figure how to prevent processing continuing another lap after halt clicked

    * Include Elapsed time on main screen

    * Display of cross-breed column incorrect

    * Allow for more random creations

    * Extend the test output fields to 8 bytes

    * Check scoring of initial params

    * Display the values out for each pass of the entity execution

    09/12/2024
    
    * Add a mainLoop that selects from a choice of best sets for processing.
        * Define the best sets in the MainControl
        * Adjust the code to deal with the chosen best set
        Add a facility to select the best set on the main screen

    * Include and display counters for the breed types

    * Include the CASM instruction for the call to label.
        * Adjust the length of SM to 2 (1 data label byte)

    07/12/2024
    
    * Arrange the input parameters and output block into separate blocks of
    256 bytes.
        * Adjust the instruction set to accommodate the new arrangement.
        
    * Allow for fixed length block interbreeding

    06/12/2024
    * Give the entities two or more sets of parameters for the same problem type
        * Entity Processing
        * Entity Display
        * Scoring

    03/12/2024

    * Document Test Scripts in ReadMe

    * Define the Instruction Set class
        Consider how the CFAR operation will be implemented
        Consider how the return data from CFAR should be handled

    * Define the minimum code to implement entities and execute them with a timer
        This delivers about 2500 entity evaluations per second

    * An undefined code sometimes gets in the memSpace - resolve.
    
    * Display entity - include score.
        * Repeating entry?

    * Add entities to best set - needs testing

    * Display entity from best set

    * Define the initial rulesets

    * Define the breeding procedures
        * Random Generation
        * Monoclonal
            Need triggering point in entity?
        * Interbreed

    * Allow for a fixed input parameter set to cover for multiple tests in the initial run
